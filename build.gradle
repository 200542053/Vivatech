plugins {
	id 'fabric-loom' version '0.2.3-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "vivatech"
version = "1.0.0-alpha.10"

repositories {
	jcenter()
	maven {
		name = "Fabric"
		url = "http://maven.fabricmc.net"
	}
	maven {
		name = "Cotton (Snapshot)"
		url = "http://server.bbkr.space:8081/artifactory/libs-snapshot"
	}
	maven {
		name = "Cotton"
		url "http://server.bbkr.space:8081/artifactory/libs-release"
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}
	maven {
		name = "BuildCraft"
		url = "https://minecraft.curseforge.com/api/maven"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:1.14.3"
	mappings "net.fabricmc:yarn:1.14.3+build.12"
	modCompile "net.fabricmc:fabric-loader:0.4.8+build.155"
	modCompile "net.fabricmc.fabric-api:fabric-api:0.3.0+build.194"

 	// javax.annotations.*
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"

	modCompile "alexiil.mc.lib:libblockattributes-all:0.4.7"
	modCompile "io.github.cottonmc:LibGui:1.1.0"
	modCompile "io.github.cottonmc:Jankson:1.0.0-j1.1.2"
	modCompile "io.github.cottonmc.cotton:cotton-logging:1.0.0-rc.1"
	modCompile "io.github.cottonmc.cotton:cotton-config:1.0.0-rc.1"
	modCompile "io.github.cottonmc.cotton:cotton-datapack:1.0.0-rc.1"
	modCompile "io.github.cottonmc:cotton-energy:1.5.0+1.14.3-SNAPSHOT"
	modCompile "io.github.cottonmc:cotton-resources:1.2.2+1.14.2"

	include "alexiil.mc.lib:libblockattributes-all:0.4.7"
	include "io.github.cottonmc:LibGui:1.1.0"
	include "io.github.cottonmc:cotton-energy:1.5.0+1.14.3-SNAPSHOT"
	include "io.github.cottonmc:cotton-resources:1.2.2+1.14.2"

	// Integration tests
	modCompile ("me.shedaniel:RoughlyEnoughItems:2.9.6+build.139") { transitive = false }
	modCompile ("io.github.prospector:modmenu:1.6.3+build.101") { transitive = false }
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}
